<?xml version="1.0" encoding="UTF-8"?>
<!--如果希望logback的配置文件支持热加载，则需要将scan上设置为true，scanPeriod为文件扫描的间隔
    debug 属性是指是否打印logback的内部日志信息，实时查看logback的运行状态，默认为false
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 文件输出格式 -->
    <property name="PATTERN" value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %msg%n" />
    <!-- 日志目录 -->
    <property name="LOG_HOME" value="logs" />

    <!--输出到控制台的appender-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
    </appender>

    <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件-->
    <appender name="agent" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/agent.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/agent.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>


    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/error.log</File>
        <!--<File>/developer/apache-tomcat-7.0.73/logs/error.log</File>-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--<fileNamePattern>/developer/apache-tomcat-7.0.73/logs/error.log.%d{yyyy-MM-dd}.gz</fileNamePattern>-->
            <fileNamePattern>${LOG_HOME}/error.log.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <logger name="com.bdcom" additivity="false" level="INFO" >
        <appender-ref ref="console"/>
        <appender-ref ref="agent" />
        <appender-ref ref="error" />
    </logger>
    


    <!-- mybatis log 日志 -->

    <!--将dao层的日志级别设置为debug，这样在测试的时候就可以看到dao层打印出来的sql语句-->
    <logger name="com.bdcom.dao" level="INFO"/>

    <!--<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" >-->
        <!--<appender-ref ref="console"/>-->
    <!--</logger>-->

    <!--<logger name="java.sql.Connection" level="DEBUG">-->
        <!--<appender-ref ref="console"/>-->
    <!--</logger>-->
    <!--<logger name="java.sql.Statement" level="DEBUG">-->
        <!--<appender-ref ref="console"/>-->
    <!--</logger>-->

    <!--<logger name="java.sql.PreparedStatement" level="DEBUG">-->
        <!--<appender-ref ref="console"/>-->
    <!--</logger>-->

    <!--系统操作日志-->
    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="agent"/>
        <appender-ref ref="error"/>
    </root>

</configuration>